from aiogram import Bot, Dispatcher
from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters import Text
import config


storage = MemoryStorage()
bot = Bot(config.bot_token)
dp = Dispatcher(bot, storage=storage)
chat_to_naswer: int

class States(StatesGroup):
    otzyv_begin = State()
    otzyv_end = State()
    zhaloba_begin = State()
    zhaloba_end = State()
    answer = State()

@dp.message_handler(commands=['start'])
async def start_ch(message: types.Message):
    buttons = [
        InlineKeyboardButton(text='–û—Ç–∑—ã–≤—ã', callback_data='otzyvy'),
        InlineKeyboardButton(text='–ñ–∞–ª–æ–±—ã', callback_data='zhaloby')
    ]
    kb = InlineKeyboardMarkup()
    kb.add(*buttons)
    await message.answer(f'''
–ü–∏—Å—å–º–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è

–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —ç—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –æ—Å—Ç–∞–≤–ª—è—Ç—å –≤–∞—à–∏ –æ—Ç–∑—ã–≤—ã, –ø–æ–∂–µ–ª–∞–Ω–∏—è –ª–∏–±–æ –∂–∞–ª–æ–±—ã.

–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∫–∞—á–µ—Å—Ç–≤—É –ø–∏—Ç–∞–Ω–∏—è –≤—ã–±–µ—Ä–µ—Ç–µ –∫–Ω–æ–ø–∫—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑–æ–≤–∞—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ–≥–æ.

–í —Å–æ–æ–±—â–µ–Ω–∏–∏ —É–∫–∞–∂–∏—Ç–µ –∫–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç, —Å –∫–∞–∫–æ–≥–æ –≤—ã –≥–æ—Ä–æ–¥–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π —Å—Ç–æ–ª–æ–≤–æ–π. 

–ù–∞–ø—Ä–∏–º–µ—Ä: ¬´–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –º–µ–Ω—è –∑–æ–≤—É—Ç –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤, –≥. –ú–æ—Å–∫–≤–∞, —Å—Ç–æ–ª–æ–≤–∞—è —à–∫–æ–ª—ã ‚Ññ1. –°–ø–∞—Å–∏–±–æ, –±—ã–ª–æ –≤–∫—É—Å–Ω–æ¬ª 

–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞!üòã''', reply_markup=kb)

@dp.message_handler(commands=['aa_65399'])
async def add_admin(message: types.Message):
    config.save_admins(message.chat.id)

@dp.callback_query_handler(text='otzyvy')
async def otz_ch(callback: types.CallbackQuery):
    await callback.message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à –æ—Ç–∑—ã–≤.')
    await States.otzyv_begin.set()

@dp.message_handler(state=States.otzyv_begin)
async def otzyv_begin(message: types.Message, state: FSMContext):
    await state.update_data(otzyv=message.text)
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤', callback_data='so'))
    await message.answer('–Ø –ø–æ–ª—É—á–∏–ª –≤–∞—à –æ—Ç–∑—ã–≤, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –µ–≥–æ –æ—Ç–ø—Ä–∞–≤–∫—É.', reply_markup=kb)
    await States.otzyv_end.set()

@dp.callback_query_handler(text='so', state=States.otzyv_end)
async def so_ch(callback: types.CallbackQuery, state: FSMContext):
    data = await state.get_data()
    await callback.message.answer('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É.')
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton(text='–û—Ç–≤–µ—Ç–∏—Ç—å', callback_data=f'otzyv_{callback.message.chat.id}'))
    for admin in config.get_admins():
       await bot.send_message(admin, f'–ü–æ—Å—Ç—É–ø–∏–ª –æ—Ç–∑—ã–≤ –æ—Ç {callback.message.from_user.username} \"{data["otzyv"]}\"', reply_markup=kb)
    await state.finish()

@dp.callback_query_handler(text='zhaloby')
async def otz_ch(callback: types.CallbackQuery):
    await callback.message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à—É –∂–∞–ª–æ–±—É.')
    await States.zhaloba_begin.set()

@dp.message_handler(state=States.zhaloba_begin)
async def otzyv_begin(message: types.Message, state: FSMContext):
    await state.update_data(zhaloba=message.text)
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É', callback_data='sz'))
    await message.answer('–Ø –ø–æ–ª—É—á–∏–ª –≤–∞—à—É –∂–∞–ª–æ–±—É, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –µ—ë –æ—Ç–ø—Ä–∞–≤–∫—É.', reply_markup=kb)
    await States.zhaloba_end.set()

@dp.callback_query_handler(text='sz', state=States.zhaloba_end)
async def so_ch(callback: types.CallbackQuery, state: FSMContext):
    data = await state.get_data()
    await callback.message.answer('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∂–∞–ª–æ–±—É, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É.')
    kb = InlineKeyboardMarkup()
    kb.add(InlineKeyboardButton(text='–û—Ç–≤–µ—Ç–∏—Ç—å', callback_data=f'zhaloba_{callback.message.chat.id}'))
    for admin in config.get_admins():
        await bot.send_message(admin, f'–ü–æ—Å—Ç—É–ø–∏–ª–∞ –∂–∞–ª–æ–±–∞ –æ—Ç {callback.message.from_user.username} \"{data["zhaloba"]}\"', reply_markup=kb)

@dp.callback_query_handler(Text(startswith='zhaloba'))
async def zhaloba_handler(callback: types.CallbackQuery, state: FSMContext):
    global chat_to_naswer
    chat_id = callback.data.split('_')[1]
    chat_to_naswer = int(chat_id)
    await callback.message.answer(f'–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç –Ω–∞ –∂–∞–ª–æ–±—É.')
    await States.answer.set()

@dp.callback_query_handler(Text(startswith='otzyv'))
async def zhaloba_handler(callback: types.CallbackQuery, state: FSMContext):
    global chat_to_naswer
    chat_id = callback.data.split('_')[1]
    chat_to_naswer = int(chat_id)
    await callback.message.answer(f'–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Ç–∑—ã–≤.')
    await States.answer.set()

@dp.message_handler(state=States.answer)
async def send_answer(message: types.Message, state: FSMContext):
    data = await state.get_data()
    await bot.send_message(chat_to_naswer, f'–ü–æ—Å—Ç—É–ø–∏–ª –æ—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: "{message.text}"')
    await state.finish()
